{"version":3,"sources":["util/corruptionIds.js","components/Changelog.js","App.js","util/processSimcInput.js","serviceWorker.js","index.js"],"names":["corruptionData","corruptionIds","reduce","acc","cur","id","includes","split","part1","part2","push","Changelog","useState","visible","setVisibility","onClick","source","App","input","setInput","buttonFlair","setButtonFlair","inputRef","useRef","useReducer","state","action","newState","type","param","value","options","setOption","activeCorruptions","toggleCorruption","className","ref","rows","onChange","e","target","output","toggledCorruptions","lines","bagGearIndex","bags","length","findIndex","line","startsWith","mainGear","slice","corruptableSlots","corruptableSlotLines","forEach","slot","allExtraPieces","cleansedLines","map","overrideSockets","replace","Object","keys","filter","corruptedLines","piecesPostFilter","ilvl475","join","processSimcInput","setTimeout","current","select","document","execCommand","name","handleCorruptionClick","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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AEd,CACE,KAAQ,kBACR,GAAM,OACN,iBAAoB,KACpB,SAAY,UAEd,CACE,KAAQ,gBACR,GAAM,OACN,iBAAoB,KACpB,SAAY,UAEd,CACE,KAAQ,qBACR,GAAM,OACN,iBAAoB,KACpB,SAAY,UAEd,CACE,KAAQ,iBACR,GAAM,OACN,iBAAoB,KACpB,SAAY,UAEd,CACE,KAAQ,gBACR,GAAM,OACN,iBAAoB,KACpB,SAAY,UAEd,CACE,KAAQ,kBACR,GAAM,OACN,iBAAoB,KACpB,SAAY,UAEd,CACE,KAAQ,mBACR,GAAM,OACN,iBAAoB,KACpB,SAAY,UAEd,CACE,KAAQ,mBACR,GAAM,OACN,iBAAoB,KACpB,SAAY,UAEd,CACE,KAAQ,mBACR,GAAM,OACN,iBAAoB,KACpB,SAAY,WA0ELC,EAAa,UAvEE,CACxB,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QAEsB,YAEnBD,EAAeE,QAAO,SAACC,EAAKC,GAC3B,GAAIA,EAAIC,GAAGC,SAAS,KAAM,CAAC,IAAD,EACGF,EAAIC,GAAGE,MAAM,KADhB,mBACdC,EADc,KACPC,EADO,KAEtBN,EAAIO,KAAKF,GACTL,EAAIO,KAAKD,QAETN,EAAIO,KAAKN,EAAIC,IAEjB,OAAOF,IACR,M,yBC/ZQ,SAASQ,IAAa,IAAD,EACGC,oBAAS,GADZ,mBACxBC,EADwB,KACfC,EADe,KAEhC,OACI,yBAAKT,GAAG,uBACJ,yBAAKA,GAAG,iBAAiBU,QAAS,kBAAMD,GAAc,KAAtD,aACED,GACE,yBAAKR,GAAG,aACJ,yBAAKA,GAAG,cAAR,iB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","file":"static/js/main.15cacf6a.chunk.js","sourcesContent":["export const corruptionData = [\r\n    {\r\n      \"name\": \"Avoidant I\",\r\n      \"id\": \"6455/6483\",\r\n      \"corruptionAmount\": \"10\",\r\n      \"effectId\": \"315607\"\r\n    },\r\n    {\r\n      \"name\": \"Avoidant II\",\r\n      \"id\": \"6460/6484\",\r\n      \"corruptionAmount\": \"15\",\r\n      \"effectId\": \"315608\"\r\n    },\r\n    {\r\n      \"name\": \"Avoidant III\",\r\n      \"id\": \"6465/6485\",\r\n      \"corruptionAmount\": \"20\",\r\n      \"effectId\": \"315609\"\r\n    },\r\n    {\r\n      \"name\": \"Expedient I\",\r\n      \"id\": \"6455/6474\",\r\n      \"corruptionAmount\": \"10\",\r\n      \"effectId\": \"315544\"\r\n    },\r\n    {\r\n      \"name\": \"Expedient II\",\r\n      \"id\": \"6460/6475\",\r\n      \"corruptionAmount\": \"15\",\r\n      \"effectId\": \"315545\"\r\n    },\r\n    {\r\n      \"name\": \"Expedient III\",\r\n      \"id\": \"6465/6476\",\r\n      \"corruptionAmount\": \"20\",\r\n      \"effectId\": \"315546\"\r\n    },\r\n    {\r\n      \"name\": \"Masterful I\",\r\n      \"id\": \"6455/6471\",\r\n      \"corruptionAmount\": \"10\",\r\n      \"effectId\": \"315529\"\r\n    },\r\n    {\r\n      \"name\": \"Masterful II\",\r\n      \"id\": \"6460/6472\",\r\n      \"corruptionAmount\": \"15\",\r\n      \"effectId\": \"315530\"\r\n    },\r\n    {\r\n      \"name\": \"Masterful III\",\r\n      \"id\": \"6465/6473\",\r\n      \"corruptionAmount\": \"20\",\r\n      \"effectId\": \"315531\"\r\n    },\r\n    {\r\n      \"name\": \"Severe I\",\r\n      \"id\": \"6455/6480\",\r\n      \"corruptionAmount\": \"10\",\r\n      \"effectId\": \"315554\"\r\n    },\r\n    {\r\n      \"name\": \"Severe II\",\r\n      \"id\": \"6460/6481\",\r\n      \"corruptionAmount\": \"15\",\r\n      \"effectId\": \"315557\"\r\n    },\r\n    {\r\n      \"name\": \"Severe III\",\r\n      \"id\": \"6465/6482\",\r\n      \"corruptionAmount\": \"20\",\r\n      \"effectId\": \"315558\"\r\n    },\r\n    {\r\n      \"name\": \"Versatile I\",\r\n      \"id\": \"6455/6477\",\r\n      \"corruptionAmount\": \"10\",\r\n      \"effectId\": \"315549\"\r\n    },\r\n    {\r\n      \"name\": \"Versatile II\",\r\n      \"id\": \"6460/6478\",\r\n      \"corruptionAmount\": \"15\",\r\n      \"effectId\": \"315552\"\r\n    },\r\n    {\r\n      \"name\": \"Versatile III\",\r\n      \"id\": \"6465/6479\",\r\n      \"corruptionAmount\": \"20\",\r\n      \"effectId\": \"315553\"\r\n    },\r\n    {\r\n      \"name\": \"Siphoner I\",\r\n      \"id\": \"6612/6493\",\r\n      \"corruptionAmount\": \"17\",\r\n      \"effectId\": \"315590\"\r\n    },\r\n    {\r\n      \"name\": \"Siphoner II\",\r\n      \"id\": \"6613/6494\",\r\n      \"corruptionAmount\": \"28\",\r\n      \"effectId\": \"315591\"\r\n    },\r\n    {\r\n      \"name\": \"Siphoner III\",\r\n      \"id\": \"6614/6495\",\r\n      \"corruptionAmount\": \"45\",\r\n      \"effectId\": \"315592\"\r\n    },\r\n    {\r\n      \"name\": \"Strikethrough I\",\r\n      \"id\": \"6455/6437\",\r\n      \"corruptionAmount\": \"10\",\r\n      \"effectId\": \"315277\"\r\n    },\r\n    {\r\n      \"name\": \"Strikethrough II\",\r\n      \"id\": \"6460/6438\",\r\n      \"corruptionAmount\": \"15\",\r\n      \"effectId\": \"315281\"\r\n    },\r\n    {\r\n      \"name\": \"Strikethrough III\",\r\n      \"id\": \"6465/6439\",\r\n      \"corruptionAmount\": \"20\",\r\n      \"effectId\": \"315282\"\r\n    },\r\n    {\r\n      \"name\": \"Racing Pulse I\",\r\n      \"id\": \"6555\",\r\n      \"corruptionAmount\": \"15\",\r\n      \"effectId\": \"318266\"\r\n    },\r\n    {\r\n      \"name\": \"Racing Pulse II\",\r\n      \"id\": \"6559\",\r\n      \"corruptionAmount\": \"20\",\r\n      \"effectId\": \"318492\"\r\n    },\r\n    {\r\n      \"name\": \"Racing Pulse III\",\r\n      \"id\": \"6560\",\r\n      \"corruptionAmount\": \"35\",\r\n      \"effectId\": \"318496\"\r\n    },\r\n    {\r\n      \"name\": \"Deadly Momentum I\",\r\n      \"id\": \"6556\",\r\n      \"corruptionAmount\": \"15\",\r\n      \"effectId\": \"318268\"\r\n    },\r\n    {\r\n      \"name\": \"Deadly Momentum II\",\r\n      \"id\": \"6561\",\r\n      \"corruptionAmount\": \"20\",\r\n      \"effectId\": \"318493\"\r\n    },\r\n    {\r\n      \"name\": \"Deadly Momentum III\",\r\n      \"id\": \"6562\",\r\n      \"corruptionAmount\": \"35\",\r\n      \"effectId\": \"318497\"\r\n    },\r\n    {\r\n      \"name\": \"Surging Vitality I\",\r\n      \"id\": \"6558\",\r\n      \"corruptionAmount\": \"15\",\r\n      \"effectId\": \"318270\"\r\n    },\r\n    {\r\n      \"name\": \"Surging Vitality II\",\r\n      \"id\": \"6565\",\r\n      \"corruptionAmount\": \"20\",\r\n      \"effectId\": \"318495\"\r\n    },\r\n    {\r\n      \"name\": \"Surging Vitality III\",\r\n      \"id\": \"6566\",\r\n      \"corruptionAmount\": \"35\",\r\n      \"effectId\": \"318499\"\r\n    },\r\n    {\r\n      \"name\": \"Honed Mind I\",\r\n      \"id\": \"6557\",\r\n      \"corruptionAmount\": \"15\",\r\n      \"effectId\": \"318269\"\r\n    },\r\n    {\r\n      \"name\": \"Honed Mind II\",\r\n      \"id\": \"6563\",\r\n      \"corruptionAmount\": \"20\",\r\n      \"effectId\": \"318494\"\r\n    },\r\n    {\r\n      \"name\": \"Honed Mind III\",\r\n      \"id\": \"6564\",\r\n      \"corruptionAmount\": \"35\",\r\n      \"effectId\": \"318498\"\r\n    },\r\n    {\r\n      \"name\": \"Echoing Void I\",\r\n      \"id\": \"6549\",\r\n      \"corruptionAmount\": \"25\",\r\n      \"effectId\": \"318280\"\r\n    },\r\n    {\r\n      \"name\": \"Echoing Void II\",\r\n      \"id\": \"6550\",\r\n      \"corruptionAmount\": \"35\",\r\n      \"effectId\": \"318485\"\r\n    },\r\n    {\r\n      \"name\": \"Echoing Void III\",\r\n      \"id\": \"6551\",\r\n      \"corruptionAmount\": \"60\",\r\n      \"effectId\": \"318486\"\r\n    },\r\n    {\r\n      \"name\": \"Infinite Stars I\",\r\n      \"id\": \"6552\",\r\n      \"corruptionAmount\": \"20\",\r\n      \"effectId\": \"318274\"\r\n    },\r\n    {\r\n      \"name\": \"Infinite Stars II\",\r\n      \"id\": \"6553\",\r\n      \"corruptionAmount\": \"50\",\r\n      \"effectId\": \"318487\"\r\n    },\r\n    {\r\n      \"name\": \"Infinite Stars III\",\r\n      \"id\": \"6554\",\r\n      \"corruptionAmount\": \"75\",\r\n      \"effectId\": \"318488\"\r\n    },\r\n    {\r\n      \"name\": \"Ineffable Truth I\",\r\n      \"id\": \"6547\",\r\n      \"corruptionAmount\": \"12\",\r\n      \"effectId\": \"318303\"\r\n    },\r\n    {\r\n      \"name\": \"Ineffable Truth II\",\r\n      \"id\": \"6548\",\r\n      \"corruptionAmount\": \"30\",\r\n      \"effectId\": \"318484\"\r\n    },\r\n    {\r\n      \"name\": \"Twilight Devastation I\",\r\n      \"id\": \"6537\",\r\n      \"corruptionAmount\": \"25\",\r\n      \"effectId\": \"318276\"\r\n    },\r\n    {\r\n      \"name\": \"Twilight Devastation II\",\r\n      \"id\": \"6538\",\r\n      \"corruptionAmount\": \"50\",\r\n      \"effectId\": \"318477\"\r\n    },\r\n    {\r\n      \"name\": \"Twilight Devastation III\",\r\n      \"id\": \"6539\",\r\n      \"corruptionAmount\": \"75\",\r\n      \"effectId\": \"318478\"\r\n    },\r\n    {\r\n      \"name\": \"Twisted Appendage I\",\r\n      \"id\": \"6543\",\r\n      \"corruptionAmount\": \"10\",\r\n      \"effectId\": \"318481\"\r\n    },\r\n    {\r\n      \"name\": \"Twisted Appendage II\",\r\n      \"id\": \"6544\",\r\n      \"corruptionAmount\": \"35\",\r\n      \"effectId\": \"318482\"\r\n    },\r\n    {\r\n      \"name\": \"Twisted Appendage III\",\r\n      \"id\": \"6545\",\r\n      \"corruptionAmount\": \"66\",\r\n      \"effectId\": \"318483\"\r\n    },\r\n    {\r\n      \"name\": \"Void Ritual I\",\r\n      \"id\": \"6540\",\r\n      \"corruptionAmount\": \"15\",\r\n      \"effectId\": \"318286\"\r\n    },\r\n    {\r\n      \"name\": \"Void Ritual II\",\r\n      \"id\": \"6541\",\r\n      \"corruptionAmount\": \"35\",\r\n      \"effectId\": \"318479\"\r\n    },\r\n    {\r\n      \"name\": \"Void Ritual III\",\r\n      \"id\": \"6542\",\r\n      \"corruptionAmount\": \"66\",\r\n      \"effectId\": \"318480\"\r\n    },\r\n    {\r\n      \"name\": \"Gushing Wound\",\r\n      \"id\": \"6573\",\r\n      \"corruptionAmount\": \"15\",\r\n      \"effectId\": \"318272\"\r\n    },\r\n    {\r\n      \"name\": \"Glimpse of Clarity\",\r\n      \"id\": \"6546\",\r\n      \"corruptionAmount\": \"15\",\r\n      \"effectId\": \"318239\"\r\n    },\r\n    {\r\n      \"name\": \"Searing Flames\",\r\n      \"id\": \"6571\",\r\n      \"corruptionAmount\": \"30\",\r\n      \"effectId\": \"318293\"\r\n    },\r\n    {\r\n      \"name\": \"Obsidian Skin\",\r\n      \"id\": \"6572\",\r\n      \"corruptionAmount\": \"50\",\r\n      \"effectId\": \"316651\"\r\n    },\r\n    {\r\n      \"name\": \"Devour Vitality\",\r\n      \"id\": \"6567\",\r\n      \"corruptionAmount\": \"35\",\r\n      \"effectId\": \"318294\"\r\n    },\r\n    {\r\n      \"name\": \"Whispered Truths\",\r\n      \"id\": \"6568\",\r\n      \"corruptionAmount\": \"25\",\r\n      \"effectId\": \"316780\"\r\n    },\r\n    {\r\n      \"name\": \"Flash of Insight\",\r\n      \"id\": \"6570\",\r\n      \"corruptionAmount\": \"20\",\r\n      \"effectId\": \"318299\"\r\n    },\r\n    {\r\n      \"name\": \"Lash of the Void\",\r\n      \"id\": \"6569\",\r\n      \"corruptionAmount\": \"25\",\r\n      \"effectId\": \"317290\"\r\n    }\r\n  ]\r\nconst corruptionAmountIds = [\r\n    \"6450\",\r\n    \"6451\",\r\n    \"6452\",\r\n    \"6453\",\r\n    \"6454\",\r\n    \"6455\",\r\n    \"6543\",\r\n    \"6456\",\r\n    \"6457\",\r\n    \"6547\",\r\n    \"6458\",\r\n    \"6459\",\r\n    \"6460\",\r\n    \"6462\",\r\n    \"6540\",\r\n    \"6546\",\r\n    \"6555\",\r\n    \"6556\",\r\n    \"6557\",\r\n    \"6558\",\r\n    \"6573\",\r\n    \"6461\",\r\n    \"6612\",\r\n    \"6463\",\r\n    \"6464\",\r\n    \"6465\",\r\n    \"6470\",\r\n    \"6552\",\r\n    \"6559\",\r\n    \"6561\",\r\n    \"6563\",\r\n    \"6565\",\r\n    \"6570\",\r\n    \"6466\",\r\n    \"6467\",\r\n    \"6468\",\r\n    \"6469\",\r\n    \"6537\",\r\n    \"6549\",\r\n    \"6568\",\r\n    \"6569\",\r\n    \"6613\",\r\n    \"6548\",\r\n    \"6571\",\r\n    \"6541\",\r\n    \"6544\",\r\n    \"6550\",\r\n    \"6560\",\r\n    \"6562\",\r\n    \"6564\",\r\n    \"6566\",\r\n    \"6567\",\r\n    \"6614\",\r\n    \"6435\",\r\n    \"6538\",\r\n    \"6553\",\r\n    \"6572\",\r\n    \"6551\",\r\n    \"6542\",\r\n    \"6545\",\r\n    \"6539\",\r\n    \"6554\",\r\n    \"6446\",\r\n    \"6447\",\r\n    \"6448\",\r\n    \"6442\",\r\n    \"6443\",\r\n    \"6444\",\r\n    \"6445\"\r\n]\r\nexport const corruptionIds = [\r\n    ...corruptionAmountIds,\r\n    ...corruptionData.reduce((acc, cur) => {\r\n        if (cur.id.includes('/')) {\r\n            const [ part1, part2 ] = cur.id.split('/')\r\n            acc.push(part1)\r\n            acc.push(part2)\r\n        } else {\r\n            acc.push(cur.id)\r\n        }\r\n        return acc\r\n    }, [])\r\n]\r\n\r\n// :^)\r\n// const a = raidbotsPastedData.split('')\r\n// const b = []\r\n// for (let i = 0; i < a.length; i += 4) {\r\n//     b.push({\r\n//         name: a[i+2].trim(),\r\n//         id: a[i].trim(),\r\n//         corruptionAmount: a[i+3].split(' ')[0].trim(),\r\n//         effectId: a[i+3].split('\\t')[2].trim(),\r\n//     })\r\n// }","import React, { useState } from 'react'\r\nimport './Changelog.scss'\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nconst changelogInput = `\r\nOnly includes the last 3 updates\\n\r\n6/4/20 (1.2.0)\r\n * When clicking 'Clone', the output is automatically copied\\n\r\n * Added ability to clone all bag gear (experimental feature, pls report bugs)\\n\r\n5/22/20 (1.1.0)\r\n * Added ability to override sockets (adds a blank socket to all cloned pieces, this is temporary until \r\n    wrathion sockets are fixed on Raidbots)\\n\r\n * Added ability to set item level of all cloned pieces to 475\\n\r\n * Added changelog\\n\r\n5/21/20 (1.0.0)\r\n * Released\\n\r\n`\r\nexport default function Changelog() {\r\n    const [ visible, setVisibility ] = useState(false)\r\n    return (\r\n        <div id=\"changelog-container\">\r\n            <div id=\"open-changelog\" onClick={() => setVisibility(true)}>Changelog</div>\r\n            { visible && (\r\n                <div id=\"changelog\">\r\n                    <div id=\"clog-title\">CMC Changelog</div>\r\n                    <ReactMarkdown\r\n                        source={changelogInput}\r\n                    />\r\n                    <div id=\"close-button\" onClick={() => setVisibility(false)}>X</div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef, useReducer } from 'react';\r\nimport processSimcInput from './util/processSimcInput';\r\nimport { corruptionData } from './util/corruptionIds'\r\nimport Changelog from './components/Changelog'\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  const [ input, setInput ] = useState('# Paste your /simc input here')\r\n  const [ buttonFlair, setButtonFlair ] = useState(false)\r\n  const inputRef = useRef()\r\n\r\n  // Additional option reducer\r\n  const [ options, setOption ] = useReducer((state, action) => {\r\n    // action is of form: { type?: string, param: string, value?: any }\r\n    const newState = { ...state }\r\n    if (action.type !== 'BOOLEAN') {\r\n      newState[action.param] = action.value\r\n    } else {\r\n      newState[action.param] = !newState[action.param]\r\n    }\r\n    return newState\r\n  }, {})\r\n\r\n  // Selected corruptions\r\n  const [ activeCorruptions, toggleCorruption ] = useReducer((state, id) => {\r\n    const newState = {...state};\r\n    newState[id] = !newState[id];\r\n    return newState;\r\n  }, {})\r\n\r\n  const submitInput = () => {\r\n    const output = processSimcInput(input, activeCorruptions, options)\r\n    setInput(output)\r\n    setTimeout(() => {\r\n      inputRef.current.select()\r\n      document.execCommand('copy')\r\n    }, 20)\r\n    setButtonFlair(true)\r\n    setTimeout(() => setButtonFlair(false), 2500)\r\n  }\r\n\r\n  const handleCorruptionClick = (id) => {\r\n    toggleCorruption(id)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Changelog />\r\n      <div id=\"inner-body\">\r\n        <div id=\"title\">Corruption Mass Cloner</div>\r\n        <div id=\"subtitle\">version 1.2.0 (last updated 6/4/2020)</div>\r\n        <div id=\"description\">\r\n          <div className=\"main-body\">\r\n            Paste your /simc input into the box below, then click on the corruptions\r\n            below that represent any corruption you want to get a copy of on your equipped gear\r\n            (default ignores unequipped)\r\n          </div>\r\n          <div id=\"credits\">This likely has bugs. Hit up enragednuke#0001 on Discord with any issues. Direct any corruption-specific questions to your class discord.</div>\r\n        </div>\r\n        <div id=\"input-area\">\r\n          <textarea ref={inputRef} rows=\"8\" onChange={(e) => setInput(e.target.value)} value={input}/>\r\n          <button\r\n            className={buttonFlair ? 'flair' : ''}\r\n            onClick={submitInput}\r\n          >\r\n            {buttonFlair ? 'Done! Copy the above into raidbots :)' : 'Clone'}\r\n          </button>\r\n        </div>\r\n        <div id=\"options\">\r\n          <div\r\n            id=\"override-sockets\"\r\n            className={`additional-option ${options.overrideSockets ? 'active' : 'inactive'}`}\r\n            onClick={() => setOption({ type: 'BOOLEAN', param: 'overrideSockets' })}\r\n          >\r\n            Override sockets\r\n          </div>\r\n          <div\r\n            id=\"ilvl-475\"\r\n            className={`additional-option ${options.ilvl475 ? 'active' : 'inactive'}`}\r\n            onClick={() => setOption({ type: 'BOOLEAN', param: 'ilvl475' })}\r\n          >\r\n            Set item levels to 475\r\n          </div>\r\n          <div\r\n            id=\"bags\"\r\n            className={`additional-option ${options.bags ? 'active' : 'inactive'}`}\r\n            onClick={() => setOption({ type: 'BOOLEAN', param: 'bags' })}\r\n          >\r\n            Clone in-bags gear too\r\n          </div>\r\n        </div>\r\n        <div id=\"corruption-selector\">\r\n          { corruptionData.map(({ name, id }) => (\r\n            <div\r\n              className={activeCorruptions[id] ? 'active' : 'inactive'}\r\n              onClick={() => handleCorruptionClick(id)}\r\n              key={name}\r\n            >\r\n              {name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { corruptionIds, corruptionData } from './corruptionIds'\r\n\r\nexport default (input, toggledCorruptions, options) => {\r\n    const lines = input.split('\\n')\r\n    const bagGearIndex = options.bags ? lines.length : lines.findIndex(line => line.startsWith('###'))\r\n    const mainGear = lines.slice(0, bagGearIndex)\r\n    const corruptableSlots = [\r\n        'wrist',\r\n        'hands',\r\n        'waist',\r\n        'legs',\r\n        'feet',\r\n        'finger1',\r\n        'finger2',\r\n        'main_hand',\r\n        'off_hand',\r\n    ]\r\n    const corruptableSlotLines = []\r\n    mainGear.forEach(line => {\r\n        corruptableSlots.forEach(slot => {\r\n            if (line.startsWith(slot)) {\r\n                corruptableSlotLines.push(line)\r\n            }\r\n            if (options.bags && line.startsWith(`# ${slot}`)) {\r\n                corruptableSlotLines.push(line.slice(2))\r\n            }\r\n        })\r\n    })\r\n    const allExtraPieces = []\r\n    const cleansedLines = corruptableSlotLines.map(line => {\r\n        return [...(options.overrideSockets ? ['4802'] : []), ...corruptionIds].reduce((acc, id) => acc.replace(id, ''), line).replace('/,', ',').replace('//', '/')\r\n    })\r\n    allExtraPieces.push(...cleansedLines)\r\n\r\n    // { a: true, b: false, c: true } => [a, c]\r\n    const idsToAdd = Object.keys(toggledCorruptions).filter(id => toggledCorruptions[id])\r\n\r\n    // Now we begin to add each corruption we want\r\n    idsToAdd.forEach(id => {\r\n        // if (id.includes('/')) id = id.split('/')[0]\r\n        const corruptedLines = cleansedLines.map(line => line.replace('bonus_id=', `bonus_id=${id}/`))\r\n        allExtraPieces.push(...corruptedLines)\r\n    })\r\n    let piecesPostFilter = allExtraPieces\r\n    if (options.overrideSockets) {\r\n        piecesPostFilter = piecesPostFilter.map(line =>\r\n            line.replace('bonus_id=', 'bonus_id=4802/')\r\n        )\r\n    }\r\n    if (options.ilvl475) {\r\n        piecesPostFilter = piecesPostFilter.map(line =>\r\n            line += ',ilevel=475'    \r\n        )\r\n    }\r\n\r\n    return `${mainGear.join('\\n')}\\n### GEAR FROM CLONER\\n${piecesPostFilter.map(line => `# ${line}`).join('\\n')}`\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}